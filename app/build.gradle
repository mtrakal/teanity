apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'io.fabric'

apply plugin: 'androidx.navigation.safeargs'

apply from: '../git-tools.gradle'

kapt {
    correctErrorTypes = true
    useBuildCache = true
    mapDiagnosticLocations = true
    arguments {
        arg("room.schemaLocation", "$projectDir/schemas".toString())
        arg("moshi.generated", "javax.annotation.Generated")
    }
    javacOptions {
        option("-Xmaxerrs", 1000)
    }
}

def app_name = "Teanity Example"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.skoumal.teanity.example"
        minSdkVersion 16
        targetSdkVersion 28

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resValue "string", "app_name", "${app_name}"
    }
    signingConfigs {
        /* TODO: add your key stores
        debugSigningConfig {
            storeFile file("debug_teanity.jks")
            storePassword "..."
            keyAlias "teanity"
            keyPassword "..."

        }
        alphaSigningConfig {
            storeFile file("alpha_teanity.jks")
            storePassword "..."
            keyAlias "teanity"
            keyPassword "..."
        }
        betaSigningConfig {
            storeFile file("beta_teanity.jks")
            storePassword "..."
            keyAlias "teanity"
            keyPassword "..."
        }
        releaseSigningConfig {
            storeFile file("teanity.jks")
            storePassword "..."
            keyAlias "teanity"
            keyPassword "..."
        }*/
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            //signingConfig signingConfigs.debugSigningConfig
        }
        alpha {
            applicationIdSuffix ".alpha"
            //signingConfig signingConfigs.alphaSigningConfig
        }
        release {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.releaseSigningConfig
        }
        beta.initWith(buildTypes.release)
        beta {
            applicationIdSuffix ".beta"
            //signingConfig signingConfigs.betaSigningConfig
        }
    }
    applicationVariants.all { variant ->
        println(variant.buildType.name)
        if (variant.buildType.name != 'release') {
            variant.resValue "string", "app_name",
                    "[${variant.buildType.name.capitalize()}]${app_name}"
        }
    }
    applicationVariants.all { variant ->
        def versionTag
        if (variant.buildType.name == 'debug') {
            versionTag = getVersionTag('alpha')
        } else {
            versionTag = getVersionTag(variant.buildType.name)
        }

        def myVersionCode = getVersionCode(versionTag)
        def myVersionName = getVersionName(versionTag)

        println variant.name + "[" + myVersionCode + ", " + myVersionName + "]"

        variant.outputs.all { output ->
            output.setVersionCodeOverride(myVersionCode)
            output.setVersionNameOverride(myVersionName)
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation project(':teanity')

    // TESTING
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'

    implementation("com.crashlytics.sdk.android:crashlytics:${versions.crashlytics}@aar") {
        transitive = true
    }
    implementation "com.facebook.stetho:stetho:1.5.0"

    // KOTLIN
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"

    // SUPPORT LIBS
    implementation "com.google.android.material:material:${versions.supportlib}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"

    // DEPENDENCY INJECTION
    implementation "org.koin:koin-core:${versions.koin}"
    implementation "org.koin:koin-android:${versions.koin}"
    implementation "org.koin:koin-androidx-viewmodel:${versions.koin}"

    // NETWORKING
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "com.squareup.moshi:moshi:${versions.moshi}"

    // GLIDE
    implementation "com.github.bumptech.glide:okhttp3-integration:${versions.glide}@aar"

    // EASING
    // TODO: Move back to bca once it supports androidX or jetifier is fixed
    //implementation "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:${versions.bca}"
    implementation "com.chibatching.kotpref:kotpref:2.5.0"
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // KAPTs
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    kapt "com.evernote:android-state-processor:${versions.state}"
    kapt "androidx.room:room-compiler:${versions.room}"
}
